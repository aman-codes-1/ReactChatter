events {}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream subscription {
        server ${REACT_APP_SERVER_DOMAIN};
    }

    server {
        listen ${PORT};
        server_name ${REACT_APP_SERVER_DOMAIN};

        # Increase buffer sizes to handle large headers
        client_max_body_size 250m;
        client_body_buffer_size 128k;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 16k;

        location / {
            root /usr/share/nginx/html/;
            index index.html index.htm;
            try_files $uri /index.html;
            expires off;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }

        location /api {
            proxy_pass ${REACT_APP_SERVER_URI};
            add_header 'Access-Control-Allow-Credentials' 'true';
            expires off;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }
        
        location /graphql {
            proxy_pass ${REACT_APP_SERVER_URI};
            add_header 'Access-Control-Allow-Credentials' 'true';
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            proxy_set_header Host $host;
        }

        location /subscriptions {
            proxy_pass ${REACT_APP_SERVER_URI}/subscriptions;
            proxy_redirect     default;
            proxy_http_version 1.1;
            proxy_set_header   Connection        $connection_upgrade;
            proxy_set_header   Upgrade           $http_upgrade; 
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout      90;
            proxy_send_timeout         90;
            proxy_read_timeout         90;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}